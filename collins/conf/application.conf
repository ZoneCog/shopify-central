collins_conf_dir = "/home/vagrant/collins/conf"
include "validations.conf"
include "authentication.conf"
include "ipam.conf"

                                                                                         
# Secret key                                                                             
# ~~~~~                                                                                  
# The secret key is used to secure cryptographics functions.                             
# If you deploy your application to several instances be sure to use the same            
# key!                                                                                   
application.secret="AbFgHx0eJx8lalkja812389uasdlkajsdlka98012398uasdlkasdklajsd81298"
parsers.text.maxLength=1048576
                                                                                         
# Do not change the crypto key after you have started using it, you will be              
# unable to decrypt data                                                                 
crypto.key="lkkajsdlkajsdlkajsdlkajsdlkajsdlkajsdlkajsdlkajsdlkajsdlkajsdla"
                                                                                         
# evolutionplugin should be disabled in a production environment                         
evolutionplugin=enabled

                                                                                         
solr {
  useEmbeddedServer = true
  embeddedSolrHome = ${collins_conf_dir}"/solr/"
  repopulateOnStartup = true

}

db.collins.logStatements=false
db.collins.password="collins"
db.collins.driver="com.mysql.jdbc.Driver"
db.collins.url="jdbc:mysql://localhost/collins?autoReconnect=true&interactiveClient=true"
db.collins.user='collins'

provisioner {

  # Only machines that have a status listed here can be provisioned
  allowedStatus = [Unallocated, Maintenance, Provisioning, Provisioned, Incomplete]

  # Only assets with this type can be provisioned
  allowedType = [SERVER_NODE, SERVER_CHASSIS]

  enabled = true

  # How long to wait before reloading profiles from disk
  cacheTimeout = 30 seconds

  # A command that runs before the actual provison, should return 0 if
  # provisioning can proceed or 1 otherwise
  checkCommand = "/bin/true"

  # The command to run. Substitutions are of the form <foo> where foo is a
  # supported substitution. Available substitutions are <tag>, <profile-id>,
  # <notify>, <suffix> and <logfile>.
  command = "/bin/false"

  # A yaml file containing all available provisioning profiles
  profiles = "test/resources/profiles.yaml"

  # How frequently people can provision, below is once every 10 seconds. You can
  # disable rate limiting on a per user basis by updating the feature.noRateLimit
  # permission
  rate = "1/10 seconds"

}
