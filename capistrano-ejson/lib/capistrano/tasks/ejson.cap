require 'open3'

namespace :ejson do
  desc "Decrypt and upload ejson config files"

  task :decrypt do
    ejson_file = fetch(:ejson_file)
    ejson_file_mode = fetch(:ejson_file_mode)
    ejson_output_file = fetch(:ejson_output_file)
    ejson_deploy_mode = fetch(:ejson_deploy_mode)
    ejson_keydir = fetch(:ejson_keydir)

    case ejson_deploy_mode
    when :local
      out, err, status = Open3.capture3('bundle', 'exec', 'ejson', '--keydir', ejson_keydir, 'decrypt', ejson_file)
      if status.exitstatus == 0
        on release_roles(:all) do
          upload! StringIO.new(out), File.join(release_path, ejson_output_file), mode: ejson_file_mode
        end
      else
        raise "Failed to decrypt file #{err}"
      end
    when :remote
      on release_roles(:all) do
        within release_path do
          execute :ejson, "--keydir", ejson_keydir, :decrypt, "-o", ejson_output_file, ejson_file
        end
      end
    else
      raise "Unknown ejson_deploy_mode: #{ejson_deploy_mode.inspect}"
    end
  end

  after 'deploy:updated', 'ejson:decrypt'
end

namespace :load do
  task :defaults do
    set :ejson_file, 'config/secrets.ejson'
    set :ejson_file_mode, nil
    set :ejson_output_file, 'config/secrets.json'
    set :ejson_deploy_mode, :local
    set :ejson_keydir, '/opt/ejson/keys'
  end
end
