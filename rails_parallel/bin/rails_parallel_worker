#!/usr/bin/env ruby

ENV['RAILS_ENV'] = 'test'
def rp_master_status(msg)
  $0 = "rails_parallel/master: #{msg}"
end

begin
  start = Time.now

  if ENV['COVERAGE']
    require 'simplecov'

    coverage_dir = ENV['COVERAGE_DIR']
    if coverage_dir
      SimpleCov.coverage_dir(coverage_dir)
      puts "RP: SimpleCov output directory set to #{coverage_dir}."
    end

    SimpleCov.start 'rails' do
      SimpleCov.command_name "#{$$}"
      puts "RP: SimpleCov enabled for pid=#{$$}.\n"
    end

  end

  rp_master_status 'loading RailsParallel'
  puts 'RP: Loading RailsParallel.'
  $LOAD_PATH << 'lib'
  require 'rails_parallel/runner'
  require 'rails_parallel/object_socket'

  socket = ObjectSocket.new(IO.for_fd(ARGV.first.to_i))
  socket << :starting

  rp_master_status 'loading Rails'
  puts 'RP: Loading Rails.'
  require "#{ENV['RAILS_PARALLEL_ROOT']}/config/environment"

  RailsParallel::Runner.launch(socket, __FILE__)

  elapsed = Time.now - start
  puts "RP: Finished in #{'%.1f' % elapsed} seconds."
  puts 'RP: Shutting down.'

  SimpleCov.result.format! if ENV['COVERAGE']
  Kernel.exit!(0)
rescue Interrupt, SignalException
  Kernel.exit!(1)
end
